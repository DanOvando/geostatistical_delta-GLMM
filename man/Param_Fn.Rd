\name{Param_Fn}
\alias{Param_Fn}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{ Data inputs for TMB }
\description{
Generates a tagged list representing starting values for coefficients (fixed and random effects) estimated by TMB 
}
\usage{
Param_Fn(DataList)
}
\arguments{
  \item{DataList}{ Tagged list generated by DataFn() }
}
\details{
This function tries to generate logical starting values.  For some problems, or for speed, you might start from better-informed values.  
}
\value{
This function generates a tagged list, where each slot corresponds to starting values for the following coefficients:
\item{ln_H_input}{ Parameters representing geometric anisotropy }
\item{beta1_t}{ Scaling encounter probability up or down for each year }
\item{gamma1_j}{ Effect of covariate j on encounter probability }
\item{logetaE1}{ Magnitude of marginal variance in spatial variation in encounter probability }
\item{logetaO1}{ Magnitude of marginal variance in spatiotemporal variation in encounter probability }
\item{logkappa1}{ Distance for correlation in encounter probability }
\item{logsigmaV1}{ standard deviation of vessel effects on encounter probability }
\item{logsigmaVT1}{ standard deviation of vessel-year effects on encounter probability }
\item{nu1_v}{ Vessel effects for encounter probability }
\item{nu1_vt}{ Vessel effects for encounter probability }
\item{Omegainput1_s}{ Vessel effects for encounter probability }
\item{Epsiloninput1_st}{ Vessel effects for encounter probability }
The preceeding parameters are then repreated for positive catch rates, e.g., beta2_t scales positive catch rates up or down for each year.
\item{logSigmaM}{ Parameters representing the distribution of residual errors }
Many coefficients are either random (and hence estimated during innner optimization) or 'turned-off' using the tagged list generated by Map_Fn
}
\references{
}
\author{
}
\note{
}
\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{

## The function is currently defined as
function (DataList) 
{
    Return = list(ln_H_input = c(0, 0), beta1_t = qlogis(tapply(ifelse(DataList$b_i > 
        0, 1, 0), INDEX = DataList$t_i, FUN = mean)), gamma1_j = rep(0, 
        DataList$n_j), lambda1_k = rep(0, DataList$n_k), logetaE1 = 0, 
        logetaO1 = 0, logkappa1 = 0, logsigmaV1 = log(1), logsigmaVT1 = log(1), 
        nu1_v = rep(0, DataList$n_v), nu1_vt = matrix(0, nrow = DataList$n_v, 
            ncol = DataList$n_t), Omegainput1_s = rep(0, DataList$n_s), 
        Epsiloninput1_st = matrix(0, nrow = DataList$n_s, ncol = DataList$n_t), 
        beta2_t = log(tapply(ifelse(DataList$b_i > 0, DataList$b_i/DataList$a_i, 
            NA), INDEX = DataList$t_i, FUN = mean, na.rm = TRUE)), 
        gamma2_j = rep(0, DataList$n_j), lambda2_k = rep(0, DataList$n_k), 
        logetaE2 = 0, logetaO2 = 0, logkappa2 = 0, logsigmaV2 = log(1), 
        logsigmaVT2 = log(1), logSigmaM = c(log(5), qlogis(0.8), 
            log(2), log(5)), nu2_v = rep(0, DataList$n_v), nu2_vt = matrix(0, 
            nrow = DataList$n_v, ncol = DataList$n_t), Omegainput2_s = rep(0, 
            DataList$n_s), Epsiloninput2_st = matrix(0, nrow = DataList$n_s, 
            ncol = DataList$n_t))
    return(Return)
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
